name: Publish Package to npmjs

on:
  push:
    tags:
      - 'v*'

jobs:
  validate-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Validate tag format
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "üìå Publishing for tag: $TAG"

          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚ùå Invalid tag format: $TAG (expected: vX.Y.Z)"
            exit 1
          fi

          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Validate package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ env.version }}

          echo "üì¶ package.json version: $PACKAGE_VERSION"
          echo "üè∑Ô∏è  Tag version: $TAG_VERSION"

          if [[ "$PACKAGE_VERSION" != "$TAG_VERSION" ]]; then
            echo "‚ùå Version mismatch: package.json ($PACKAGE_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi

          echo "‚úÖ Version validation passed"

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in ${{ github.ref_name }}

            This release was automatically generated from tag ${{ github.ref_name }}.

            ### Installation
            ```bash
            npm install @revisium/schema-toolkit@${{ env.version }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
